// Copyright (c) 2019 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//


#include <hcp/parser.hh> //impl
#include <hcp/ast.hh> //impl
#include <xju/http/StatusLine.hh>
#include <xju/readThrough.hh> //impl
#include <xju/http/statusLineParser.hh> //impl
#include <xju/http/StatusLineItem.hh> //impl

namespace xju
{
namespace http
{

StatusLine parseStatusLine(std::istream& s, size_t max) /*throw(
  xju::Exception,
  std::exception)*/
{
  try{
    std::string const l{xju::readThrough(s,"\r\n",max)};
    auto const x(hcp_parser::parseString(l.begin(),l.end(),
                                         statusLineParser()));
    return hcp_ast::findOnlyChildOfType<StatusLineItem>(x).get();
  }
  catch(xju::Exception& e){
    std::ostringstream s;
    s << "parse HTTP status-line of max " << max << " chars from stream";
    e.addContext(s.str(),XJU_TRACED);
    throw;
  }
}

}
}
