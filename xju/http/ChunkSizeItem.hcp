// Copyright (c) 2020 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//


#include <hcp/ast.hh>
#include <xju/Exception.hh>
#include <unistd.h>
#include <xju/stringToULongLong.hh> //impl
#include <sstream> //impl
#include <limits> //impl

namespace xju
{
namespace http
{

class ChunkSizeItem: public hcp_ast::Item
{
public:
  using hcp_ast::Item::Item;

  size_t get() const /*throw(xju::Exception)*/{
    unsigned long long const result(
      xju::stringToULongLong(hcp_ast::reconstruct(*this),16));
    if(result>std::numeric_limits<size_t>::max()){
      std::ostringstream s;
      s << "valid chunk size " << result << " exceeds max size_t";
      throw xju::Exception(s.str(),XJU_TRACED);
    }
    return (size_t)result;
  }
};

}
}
