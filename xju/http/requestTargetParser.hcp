// Copyright (c) 2019 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//


#include <hcp/ast.hh>
#include <hcp/parser.hh>
#include <xju/uri/parseURI.hh> //impl
#include <xju/http/RequestTarget.hh>
#include <xju/uri/pctDecode.hh> //impl
#include <xju/uri/segmentChars.hh> //impl
#include <xju/prev.hh> //impl
#include <xju/http/originFormParser.hh> //impl
#include <xju/http/absoluteFormParser.hh> //impl
#include <xju/http/authorityFormParser.hh> //impl
#include <xju/http/asteriskFormParser.hh> //impl
#include <xju/http/RequestTargetItem.hh>

namespace xju
{
namespace http
{

// return RFC7230 (HTTP) request-target parser
std::shared_ptr<hcp_parser::NamedParser<RequestTargetItem> >
requestTargetParser()
  noexcept
{
  static std::shared_ptr<hcp_parser::NamedParser<RequestTargetItem> > result(
    hcp_parser::named<RequestTargetItem>(
      "RFC7230 (HTTP) Request Target",
      originFormParser()|
      absoluteFormParser()|
      asteriskFormParser()| //note * is a valid authority by rfc3986
                            //so we reverse order of asterisk, authority
                            //from that given in rfc7230
      authorityFormParser()));
  return result;
}

}
}
