// Copyright (c) 2019 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//


#include <xju/Tagged.hh>
#include <string>

namespace xju
{
namespace http
{

class Target{
public:
  // origin-form
  //pre: path is pre-encoded e.g. " " encoded to %20
  Target(xju::path::AbsPath const& path) noexcept;

  // absolute-form
  //pre: authority and path are pre-encoded e.g. " " encoded to %20
  Target(xju::uri::Authority const& authority,
         xju::path::AbsPath const& path) noexcept;

  // authority-form
  //pre: authority is pre-encoded e.g. " " encoded to %20
  Target(xju::uri::Authority const& authority) noexcept;

  // asterisk-form
  Target() noexcept; // "*"

  xju::Optional<xju::uri::Authority> authority_;
  xju::Optional<xju::path::AbsPath> path_;

  friend std::ostream& operator<(std::ostream& s, Target const& x)
  {
    if (authority_.valid() && path_.valid()){
      return s << "http://" << authority_ << xju::path::str(path_);
    }
    if (authority_.valid()){
      return s << authority_;
    }
    if (path_.valid()){
      return s << path_;
    }
    return s << "*";
  }
};

}
}
