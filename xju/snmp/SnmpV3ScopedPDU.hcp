// Copyright (c) 2022 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//


#include <xju/snmp/ContextEngineID.hh>
#include <xju/snmp/ContextName.hh>
#include <xju/snmp/PDU.hh>
#include <utility> //impl
#include <iostream>
#include <xju/snmp/hexStr.hh>
#include <xju/format.hh>

namespace xju
{
namespace snmp
{

class SnmpV3ScopedPDU
{
public:
  SnmpV3ScopedPDU(
    ContextEngineID contextEngineID,
    ContextName contextName,
    PDU pdu) noexcept:
      contextEngineID_(std::move(contextEngineID)),
      contextName_(std::move(contextName)),
      pdu_(std::move(pdu))
  {
  }
  ContextEngineID contextEngineID_;
  ContextName contextName_;
  PDU pdu_;

  friend bool operator<(SnmpV3ScopedPDU const& a, SnmpV3ScopedPDU const& b) noexcept;

  friend std::ostream& operator<<(std::ostream& s, SnmpV3ScopedPDU const& x) noexcept
  {
    return s << "{ context engine id: " << hexStr(x.contextEngineID_)
             << ", context name: " << xju::format::quote(xju::format::cEscapeString(
                                                           xju::format::str(x.contextName_)))
             << ", pdu: " << x.pdu_
             << " }";
  }

};


}
}
