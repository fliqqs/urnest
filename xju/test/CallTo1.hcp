//generated by xju/test/CallToPn.py

#include <xju/test/CallTo.hh>

namespace xju
{
namespace test
{

template<class T,class U,class P1>
class CallToV1 : public CallToVoid
{
public:
  explicit CallToV1(
    T& x,void 
    (U::*f)(P1),
    P1 const& p1)
      : x_(x),
        f_(f),
        p1_(p1)
  {
  }
  T& x_;
  void (U::* const f_)(P1);
  P1 const& p1_;
};


template<class T,class U,class R,class P1>
class CallToR1 : public CallToR<R>
{
public:
  explicit CallToR1(
    T& x,
    R (U::*f)(P1),
    P1 const& p1)
      : x_(x),
        f_(f),
        p1_(p1)
  {
  }
  T& x_;
  R (U::* const f_)(P1);
  P1 const& p1_;
};

}
}

