//generated by xju/test/CallToPn.py

#include <xju/test/CallTo.hh>

namespace xju
{
namespace test
{

template<class T,class U,class P1,class P2,class P3>
class CallToV3 : public CallToVoid
{
public:
  explicit CallToV3(
    T& x,void 
    (U::*f)(P1,P2,P3),
    P1 const& p1,
    P2 const& p2,
    P3 const& p3)
      : x_(x),
        f_(f),
        p1_(p1),
        p2_(p2),
        p3_(p3)
  {
  }
  T& x_;
  void (U::* const f_)(P1,P2,P3);
  P1 const& p1_;
  P2 const& p2_;
  P3 const& p3_;
};


template<class T,class U,class R,class P1,class P2,class P3>
class CallToR3 : public CallToR<R>
{
public:
  explicit CallToR3(
    T& x,
    R (U::*f)(P1,P2,P3),
    P1 const& p1,
    P2 const& p2,
    P3 const& p3)
      : x_(x),
        f_(f),
        p1_(p1),
        p2_(p2),
        p3_(p3)
  {
  }
  T& x_;
  R (U::* const f_)(P1,P2,P3);
  P1 const& p1_;
  P2 const& p2_;
  P3 const& p3_;
};

}
}

