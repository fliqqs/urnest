// Copyright (c) 2018 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//


#include <xju/json/Element.hh>
#include <string>
#include <sstream> //impl
#include <typeinfo> //impl
#include <xju/format.hh> //impl
#include <xju/Utf8String.hh>

namespace xju
{
namespace json
{
class String : public xju::json::Element
{
public:
  explicit String(xju::Utf8String const value) noexcept
    :value_(value)
  {
  }

  virtual std::string str() const noexcept override
  {
    return xju::format::quote(xju::format::str(value_));
  }
  
  virtual bool lessThan(Element const& y) const noexcept override
  {
    if (typeid(*this)!=typeid(y)){
      return std::string(typeid(*this).name())<typeid(y).name();
    }
    return value_ < static_cast<String const&>(y).value_;
  }

protected:
  virtual xju::Utf8String asString_() const throw(
    xju::Exception) override
  {
    return value_;
  }

private:
  xju::Utf8String value_;
};

}
}
