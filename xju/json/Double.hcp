// Copyright (c) 2018 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//


namespace xju
{
namespace json
{
class Double : public Element
{
public:
  explicit Double(long double const value) noexcept
    :value_(value)
  {
  }

  long double value_;
  
  virtual std::string str() const noexcept override
  {
    return xju::format::str(value_);
  }

  virtual bool lessThan(Element const& y) const noexcept override
  {
    if (typeid(*this)!=typeid(y)){
      return std::string(typeid(*this).name())<typeid(y).name();
    }
    return value_ < static_cast<Uint const&>(y).value_;
  }

};

}
}
