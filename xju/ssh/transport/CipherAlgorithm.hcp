// Copyright (c) 2020 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//


#include <memory>
#include <xju/ssh/transport/CipherKey.hh>
#include <xju/ssh/transport/CipherIV.hh>
#include <xju/ssh/transport/Encrypter.hh>
#include <xju/ssh/transport/Decrypter.hh>
#include <xju/BitCount.hh>
#include <unistd.h>

namespace xju
{
namespace ssh
{
namespace transport
{

class CipherAlgorithm
{
public:
  explicit CipherAlgorithm(BitCount const keySize,
                           size_t const ivSize) noexcept:
      keySize_(keySize),
      ivSize_(ivSize)
  {
  }
  BitCount const keySize_;
  size_t const ivSize_;
  
  virtual ~CipherAlgorithm() noexcept{}

  virtual std::unique_ptr<Encrypter> encrypter(
    CipherKey cipherKey,
    CipherIV cipherIV) = 0;
  virtual std::unique_ptr<Decrypter> decrypter(
    CipherKey cipherKey,
    CipherIV cipherIV) = 0;
  
};

}
}
}
