// Copyright (c) 2020 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//


namespace xju
{
namespace ssh
{
namespace transport
{
namespace kexers
{

class DhGroup1SHA1Client : Kexer
{
public:
  virtual std::pair<K,H> exchangeKeys(
    I::RekeyLock& i,
    O::RekeyLock& o,
    Ident const& ourIdent,
    std::pair<std::string,Ident> const& peerPreambleAndIdent,
    messages::KexInit const& ourKexInit,
    messages::KexInit const& peerKexInit,
    HostKeyAlgorithm& hostKeyAlgorithm,
    bool ignoreFirstMessageReceived) override
  {
  }

  virtual bool requiresEncryptionCapableHostKey() const noexcept override
  {
    REVISIT;
  }
  virtual bool requiresSignatureCapableHostKey() const noexcept override
  {
    REVISIT;
  }

};

}
}
}
}
