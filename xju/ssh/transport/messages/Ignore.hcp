// Copyright (c) 2020 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//


#include <vector>
#include <utility> //impl
#include <iostream>
#include <xju/format.hh>

namespace xju
{
namespace ssh
{
namespace transport
{
namespace messages
{

class Ignore
{
public:
  explicit Ignore(std::vector<uint8_t> data) noexcept:
      data_(std::move(data))
  {
  }
  std::vector<uint8_t> data_;
  
  friend std::ostream& operator<<(std::ostream& s, Ignore const& x)
  {
    return s << xju::format::join(x.data_.begin(),
                                  x.data_.end(),
                                  [](uint8_t b){
                                    return xju::format::hex(b,"");
                                  },
                                  " ");
  }

  friend bool operator<(Ignore const& x, Ignore const& y) noexcept;

};

}
}
}
}
