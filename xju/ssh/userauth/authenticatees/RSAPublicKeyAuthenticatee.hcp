// Copyright (c) 2020 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//


#include <xju/ssh/userauth/Authenticatee.hh>
#include <xju/crypt/rsa/PublicKey.hh>

namespace xju
{
namespace ssh
{
namespace userauth
{
namespace authenticatees
{
class RSAPublicKeyAuthenticatee : public Authenticatee
{
public:
  // rfc4252 ssh-rsa public key authenticatee
  // - signer is e.g. xju::crypt::rsa::Signer
  // pre: signer will outlive this
  RSAPublicKeyAuthenticatee(xju::crypt::rsa::PublicKey publicKey,
                            xju::crypt::Signer& signer) noexcept:
      publicKey_(std::move(publicKey)),
      signer_(std::move(signer))
  {
  }

  void authenticate(xju::ssh::transport::SingleTheadedInterface& session,
                    ServiceName const& serviceName) override
  {
    REVISIT;
  }

private:
  xju::crypt::rsa::PublicKey publicKey_;
  xju::crypt::Signer& signer_;
};

}
}
}
}
