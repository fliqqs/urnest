// Copyright (c) 2020 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//


#include <xju/ssh/userauth/ServiceName.hh>
#include <xju/ssh/transport/SingleThreadedSendInterface.hh>
#include <xju/ssh/transport/ReceiveInterface.hh>
#include <vector>
#include <xju/ssh/transport/Message.hh>

namespace xju
{
namespace ssh
{
namespace userauth
{

class Authenticatee
{
public:
  virtual ~Authenticatee() noexcept{}

  // perform rfc4252 authentication on session for specified service,
  // returning any non-userauth messages received before completion
  virtual std::vector<transport::Message> authenticate(
    xju::ssh::transport::SingleThreadedSendInterface& sender,
    xju::ssh::transport::ReceiveInterface& receiver,
    ServiceName const& serviceName) = 0;
};

}
}
}
