// Copyright (c) 2020 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//


#include <xju/ssh/userauth/messages/Request.hh>
#include <xju/crypt/rsa/PublicKey.hh>
#include <xju/crypt/Signature.hh>
#include <utility> //impl

namespace xju
{
namespace ssh
{
namespace userauth
{
namespace messages
{

class RSAPublicKeyRequest : public Request
{
public:
  // rfc4253 "ssh-rsa" algorithm
  explicit RSAPublicKeyRequest(
    xju::UserName userName,
    xju::ssh::misc::ServiceName serviceName,
    xju::crypt::rsa::PublicKey publicKey,
    xju::crypt::Signature signature):
      Request(std::move(userName),
              std::move(serviceName),
              MethodName("publickey")),
      publicKey_(std::move(publicKey)),
      signature_(std::move(signature))
  {
  }

  virtual ~RSAPublicKeyRequest() noexcept{}
  
  xju::crypt::rsa::PublicKey publicKey_;
  xju::crypt::Signature      signature_;
  
  friend bool operator<(RSAPublicKeyRequest const& a,
                        RSAPublicKeyRequest const& b) noexcept;
};


}
}
}
}
