// Copyright (c) 2018 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//


#include <xju/ip/v4/Address.hh>
#include <xju/ip/icmp/Message.hh>
#include <xju/ip/Protocol.hh>
#include <xju/Array.hh>
#include <cinttypes>

namespace xju
{
namespace ip
{
namespace icmp
{

// smattering of info from ICMP destination unreachable message
class DestinationUnreachable
{
public:
  // unreachableAddress is dest address of original IP packet
  // protocol is protocol of original IP packet
  // data is first 8 bytes of payload of original IP packet
  DestinationUnreachable(
    xju::ip::v4::Address gateway,
    Message::Code code,
    xju::ip::v4::Address unreachableAddress,
    xju::ip::Protocol protocol,
    xju::Array<uint8_t,8> data) noexcept
      :gateway_(gateway),
       code_(code),
       unreachableAddress_(unreachableAddress),
       protocol_(protocol),
       data_(data)
  {
  }
  
  xju::ip::v4::Address gateway_;
  Message::Code code_;
  xju::ip::v4::Address unreachableAddress_;
  xju::ip::Protocol protocol_;
  xju::Array<uint8_t,8> data_; // e.g. icmp message

  friend bool operator<(DestinationUnreachable const& x,
                        DestinationUnreachable const& y) noexcept;
  
};


}
}
}


