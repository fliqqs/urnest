// Copyright (c) 2017 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//
#include <utility>
#include <xju/path.hh>
#include "xju/Exception.hh"

#include <stdio.h> //impl
#include "xju/syscall.hh" //impl
#include "xju/stdio.hh"

namespace xju
{
namespace file
{
// rename file to newName
void rename(
  std::pair<xju::path::AbsolutePath,xju::path::FileName> const& file,
  std::pair<xju::path::AbsolutePath,xju::path::FileName> const& newName) throw(
    xju::Exception)
{
  try {
    xju::syscall(xju::rename,XJU_TRACED)(xju::path::str(file).c_str(),
                                      xju::path::str(newName).c_str());
  }
  catch(xju::Exception& e) {
    std::ostringstream s;
    s << "rename " << xju::path::str(file) << " to "
      << xju::path::str(newName);
    e.addContext(s.str(),XJU_TRACED);
    throw;
  }
}

// rename directory to newName
void rename(
  std::pair<xju::path::AbsolutePath,xju::path::DirName> const& directory,
  std::pair<xju::path::AbsolutePath,xju::path::DirName> const& newName) throw(
    xju::Exception)
{
  try {
    xju::syscall(xju::rename,XJU_TRACED)(xju::path::str(directory).c_str(),
                                      xju::path::str(newName).c_str());
  }
  catch(xju::Exception& e) {
    std::ostringstream s;
    s << "rename " << xju::path::str(directory) << " to "
      << xju::path::str(newName);
    e.addContext(s.str(),XJU_TRACED);
    throw;
  }
}

}
}
