// Copyright (c) 2014 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//

#include "xju/Exception.hh"
#include <utility>
#include <string>


class E : public xju::Exception
{
public:
  typedef std::pair<std::string, unsigned int> FileAndLine;
  E(std::string const& cause, FileAndLine const& fileAndLine) throw():
      xju::Exception(cause, xju::Traced(fileAndLine.first, fileAndLine.second))
  {
  }
  void addContext(std::string const& context,
                  FileAndLine const& fileAndLine) throw()
  {
    xju::Exception::addContext(
      context, xju::Traced(fileAndLine.first, fileAndLine.second));
  }
  friend bool operator<(E const& x, E const& y) throw()
  {
    return 
      std::make_pair(x.cause(), x.context()) <
      std::make_pair(y.cause(), y.context());
  }
};

