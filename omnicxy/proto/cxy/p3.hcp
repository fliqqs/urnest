// generated from p3.idl by omni cxy idl backend specifying 
// cxy::Exception from <cxy/Exception.hh> as base class for all ipc exceptions

#include <cxy/Exception.hh>
#include <xju/Int.hh>
#include <string>
#include <stdint.h>
#include <xju/Tagged.hh>


namespace p3
{
class MyInt_tag {};
typedef ::xju::Int<MyInt_tag,int32_t> MyInt;
class MyString_tag {};
typedef ::xju::Tagged<std::string,MyString_tag> MyString;
class F
{
public:
  virtual ~F() throw()
  {
  }
  virtual ::p3::MyInt f1(
    ::p3::MyInt const& a) throw(
    // ipc failure
    // - note servant may not throw
    cxy::Exception) = 0;
  virtual ::p3::MyString f2(
    ::p3::MyString const& a) throw(
    // ipc failure
    // - note servant may not throw
    cxy::Exception) = 0;
};

}
