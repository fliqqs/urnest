%all.tree==<<
%all-tests.tree

%run-all-tests==%all-tests.tree:leaves

%gen==(..%all.idl.sm)+inc_sp=(../../..)+hcp-split=(../../../hcp/hcp-split)+cxy='-causeType=::p7::ExceptionCause'+cxy='-contextType=::p7::ExceptionContext':omnicxy

%gen.1==(../p14.idl)+inc_sp=(../../..)+hcp-split=(../../../hcp/hcp-split)+cxy='-causeType=::p7::ExceptionCause'+cxy='-contextType=::p7::ExceptionContext':omnicxy.output

#above %gen assumes OMNICXY_BE_DIR environment variable passed to cache
#creation, otherwise could use
#%gen==(..%all.idl.sm)+hcp-split=(../../../hcp/hcp-split)+cxy-be-dir=(../../omniidl_be)+cxy='-causeType=::p7::ExceptionCause'+cxy='-contextType=::p7::ExceptionContext':omnicxy

#generated code for reference
%p1.hh==%gen/p1.hh
%p2.hh==%gen/p2.hh
%p3.hh==%gen/p3.hh
%p4.hh==%gen/p4.hh
%p5.hh==%gen/p5.hh
%p6.hh==%gen/p6.hh
%p7.hh==%gen/p7.hh
%p9.hh==%gen/p9.hh
%p10.hh==%gen/p10.hh
%p11.hh==%gen/p11.hh
%p12.hh==%gen/p12.hh
%p13.hh==%gen/p13.hh
%p14.hh==%gen/p14.hh
%p1.hcp==%gen/p1.hcp
%p2.hcp==%gen/p2.hcp
%p3.hcp==%gen/p3.hcp
%p4.hcp==%gen/p4.hcp
%p5.hcp==%gen/p5.hcp
%p6.hcp==%gen/p6.hcp
%p7.hcp==%gen/p7.hcp
%p9.hcp==%gen/p9.hcp
%p10.hcp==%gen/p10.hcp
%p11.hcp==%gen/p11.hcp
%p12.hcp==%gen/p12.hcp
%p13.hcp==%gen/p13.hcp
%p14.hcp==%gen/p14.hcp
%p14.cref.hcp==%gen/p14.cref.hcp
%p14.cdr.hcp==%gen/p14.cdr.hcp
%p14.objref.hcp==%gen/p14.objref.hcp
%p14.sref.hcp==%gen/p14.sref.hcp
%p15.hcp==%gen/p15.hcp
%p15.cref.hcp==%gen/p15.cref.hcp
%p15.cdr.hcp==%gen/p15.cdr.hcp
%p15.objref.hcp==%gen/p15.objref.hcp
%p15.sref.hcp==%gen/p15.sref.hcp
%p16.hcp==%gen/p16.hcp
%p16.cref.hcp==%gen/p16.cref.hcp
%p16.cdr.hcp==%gen/p16.cdr.hcp
%p16.objref.hcp==%gen/p16.objref.hcp
%p16.sref.hcp==%gen/p16.sref.hcp

%all-tests.tree==<<
()+cmd=(%p1-main) '3735' 'both':exec.output
()+cmd=(%p2-main) '3736' 'both':exec.output
()+cmd=(%p3-main) '3737' 'both':exec.output
%test-transient
()+cmd=(%p4-main) '3738' 'both':exec.output
()+cmd=(%p5-main) '3739' 'both':exec.output
()+cmd=(%p6-main) '3740' 'both':exec.output
()+cmd=(%p7-main) '3741' 'both':exec.output
()+cmd=(%p9-main) '3743' 'both':exec.output
()+cmd=(%p10-main) '3744' 'both':exec.output
()+cmd=(%p11-main) '3745' 'both':exec.output
()+cmd=(%p12-main) '3746' 'both':exec.output
()+cmd=(%p13-main) '3747' 'both':exec.output
()+cmd=(%p14-main) '3748' 'both':exec.output
()+cmd=(%p15-main) '3749' 'both':exec.output
()+cmd=(%p16-main) '3750' 'both':exec.output
%test-transient
()+cmd=(%test-no-such-object) '3760':exec.output
()+cmd=(%test-duplicate-name) '3761':exec.output
()+cmd=(%p2-main-2) '3752' 'both':exec.output
%leak-checks.tree

%p15-malloc-trace==()+cmd=env 'MALLOC_TRACE=malloc-trace-report.txt' (%p15-main) '3749' 'both':exec.files
%p15-malloc-trace-report.txt==()+cmd=(%mtrace) (%p15-main) (%p15-malloc-trace+member='malloc-trace-report.txt':extract_file):stdout

%mtrace == ! <<
#!/bin/sh
# mtrace exits non-zero if it find memory leaks, which does not suit us
mtrace "$@" || true

%cxx-opts==<<
+(../..%cxx-opts)
+inc_sp=(%gen)
+inc_sp=(%genroot.v:vir_dir)

%p1-main==p1-main.cc+(%cxx-opts):auto.cxx.exe
%p2-main==p2-main.cc+(%cxx-opts):auto.cxx.exe
%p3-main==p3-main.cc+(%cxx-opts):auto.cxx.exe
%p4-main==p4-main.cc+(%cxx-opts):auto.cxx.exe
%p5-main==p5-main.cc+(%cxx-opts):auto.cxx.exe
%p6-main==p6-main.cc+(%cxx-opts):auto.cxx.exe
%p7-main==p7-main.cc+(%cxx-opts):auto.cxx.exe
%p9-main==p9-main.cc+(%cxx-opts):auto.cxx.exe
%p10-main==p10-main.cc+(%cxx-opts):auto.cxx.exe
%p11-main==p11-main.cc+(%cxx-opts):auto.cxx.exe
%p12-main==p12-main.cc+(%cxx-opts):auto.cxx.exe
%p13-main==p13-main.cc+(%cxx-opts):auto.cxx.exe
%p14-main==p14-main.cc+(%cxx-opts):auto.cxx.exe
%p15-main==p15-main.cc+(%cxx-opts):auto.cxx.exe
%p16-main==p16-main.cc+(%cxx-opts):auto.cxx.exe
%test-no-such-object==test-no-such-object.cc+(%cxx-opts):auto.cxx.exe
%test-duplicate-name==test-duplicate-name.cc+(%cxx-opts):auto.cxx.exe

%test-transient==()+cmd=(%test-transient.sh) (%p1-main):exec.output

%test-transient.sh == ! <<
#!/bin/sh
set -x &&
p1main="$1" &&
{ x=$($p1main 3733 client 2>&1) ; test $? = 1 ; } &&
echo "$x" | fgrep TRANSIENT

%genroot.v==<<
%omnicxy==.%omnicxy.v:vir_dir

%omnicxy.v==<<
%proto==.%gen


#test hpath option
%all-2.idl.sm==<<
../p1.idl
../p2.idl

%p2-main-2==p2-main.cc+(%cxx-opts-2):auto.cxx.exe

%cxx-opts-2==<<
+(../..%cxx-opts)
+inc_sp=(%genroot-2.v:vir_dir)

%genroot-2.v==<<
%omnicxy==.%omnicxy-2.v:vir_dir

%omnicxy-2.v==<<
%proto==.%gen-2

%gen-2==(%all-2.idl.sm)+hpath='omnicxy/proto'+inc_sp=(../../..)+hcp-split=(../../../hcp/hcp-split)+cxy='-causeType=::p7::ExceptionCause'+cxy='-contextType=::p7::ExceptionContext':omnicxy

%leak-checks.tree==<<
%p1-leak-check
%p2-leak-check
%p16-leak-check

%p1-leak-check==(%p1-10-leak-report.txt)+cmd=diff (%p1-100-leak-report.txt) -:stdout
%p1-10-leak-report.txt==()+cmd=(%valgrind-leaks.sh) '10' (%p1-main) '13735' 'both':exec.output
%p1-100-leak-report.txt==()+cmd=(%valgrind-leaks.sh) '100' (%p1-main) '23735' 'both':exec.output

%p2-leak-check==(%p2-10-leak-report.txt)+cmd=diff (%p2-100-leak-report.txt) -:stdout
%p2-10-leak-report.txt==()+cmd=(%valgrind-leaks.sh) '10' (%p2-main) '13736' 'both':exec.output
%p2-100-leak-report.txt==()+cmd=(%valgrind-leaks.sh) '100' (%p2-main) '23736' 'both':exec.output

%p16-leak-check==(%p16-10-leak-report.txt)+cmd=diff (%p16-100-leak-report.txt) -:stdout
%p16-10-leak-report.txt==()+cmd=(%valgrind-leaks.sh) '10' (%p16-main) '13750' 'both':exec.output
%p16-100-leak-report.txt==()+cmd=(%valgrind-leaks.sh) '100' (%p16-main) '23750' 'both':exec.output

%valgrind-leaks.sh == ! <<
#!/bin/sh
REPEAT=$1 && shift &&
valgrind --tool=memcheck "$@" 2>&1 |
egrep 'definitely lost: |indirectly lost: |possibly lost: |still reachable: '|
while read pid rest
do
  echo $rest
done

