// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.

#include "p1.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_2;



p1::F_ptr p1::F_Helper::_nil() {
  return ::p1::F::_nil();
}

::CORBA::Boolean p1::F_Helper::is_nil(::p1::F_ptr p) {
  return ::CORBA::is_nil(p);

}

void p1::F_Helper::release(::p1::F_ptr p) {
  ::CORBA::release(p);
}

void p1::F_Helper::marshalObjRef(::p1::F_ptr obj, cdrStream& s) {
  ::p1::F::_marshalObjRef(obj, s);
}

p1::F_ptr p1::F_Helper::unmarshalObjRef(cdrStream& s) {
  return ::p1::F::_unmarshalObjRef(s);
}

void p1::F_Helper::duplicate(::p1::F_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

p1::F_ptr
p1::F::_duplicate(::p1::F_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

p1::F_ptr
p1::F::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


p1::F_ptr
p1::F::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

p1::F_ptr
p1::F::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_F _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_F* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_F;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* p1::F::_PD_repoId = "IDL:p1/F:1.0";


p1::_objref_F::~_objref_F() {
  
}


p1::_objref_F::_objref_F(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::p1::F::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
p1::_objref_F::_ptrToObjRef(const char* id)
{
  if (id == ::p1::F::_PD_repoId)
    return (::p1::F_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::p1::F::_PD_repoId))
    return (::p1::F_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for p1::F::f1

// Proxy call descriptor class. Mangled signature:
//  void
class _0RL_cd_c6f736071337bfb6_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f736071337bfb6_00000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
    
  
  static const char* const _user_exns[];

  
};

const char* const _0RL_cd_c6f736071337bfb6_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f736071337bfb6_10000000(omniCallDescriptor*, omniServant* svnt)
{
  
  p1::_impl_F* impl = (p1::_impl_F*) svnt->_ptrToInterface(p1::F::_PD_repoId);
  impl->f1();


}

void p1::_objref_F::f1()
{
  _0RL_cd_c6f736071337bfb6_00000000 _call_desc(_0RL_lcfn_c6f736071337bfb6_10000000, "f1", 3);


  _invoke(_call_desc);



}

p1::_pof_F::~_pof_F() {}


omniObjRef*
p1::_pof_F::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::p1::_objref_F(ior, id);
}


::CORBA::Boolean
p1::_pof_F::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::p1::F::_PD_repoId))
    return 1;
  
  return 0;
}

const p1::_pof_F _the_pof_p1_mF;

p1::_impl_F::~_impl_F() {}


::CORBA::Boolean
p1::_impl_F::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "f1")) {

    _0RL_cd_c6f736071337bfb6_00000000 _call_desc(_0RL_lcfn_c6f736071337bfb6_10000000, "f1", 3, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
p1::_impl_F::_ptrToInterface(const char* id)
{
  if (id == ::p1::F::_PD_repoId)
    return (::p1::_impl_F*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::p1::F::_PD_repoId))
    return (::p1::_impl_F*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
p1::_impl_F::_mostDerivedRepoId()
{
  return ::p1::F::_PD_repoId;
}

POA_p1::F::~F() {}

