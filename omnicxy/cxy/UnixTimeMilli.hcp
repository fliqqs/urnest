// Copyright (c) 2017 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//
#include <chrono>
#include <iostream>
#include <xju/unix_epoch.hh> //impl


namespace cxy
{
// conversion to idl truncates
class UnixTimeMilli : public std::chrono::time_point<std::chrono::system_clock>
{
public:
  using std::chrono::time_point<std::chrono::system_clock>::time_point;
  UnixTimeMilli(std::chrono::time_point<std::chrono::system_clock> const& t):
      std::chrono::time_point<std::chrono::system_clock>(t)
  {}
};
std::ostream& operator<<(std::ostream& s, UnixTimeMilli const& x)
  throw(){
  return s << std::chrono::duration_cast<std::chrono::milliseconds>(x-xju::unix_epoch()).count();
}

}



