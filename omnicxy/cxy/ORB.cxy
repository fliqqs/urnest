// Copyright (c) 2014 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//
#ifndef CXY_ORB_H
#define CXY_ORB_H

#include "ORBImpl.hh"
#include <algorithm>
#include <functional>
#include <typeinfo>

namespace cxy
{
class ORBImpl;

template<class BaseException>
class ORB
{
public:
  explicit ORB(std::string const& orbEndPoint) throw(BaseException) try:
    impl_(orbEndPoint) {
  }
  catch(xju::Exception& e)
  {
    if (&typeid(xju::Exception)==&typeid(BaseException)) {
      throw;
    }
    BaseException x(e.cause.first, e.cause.second);
    std::copy(e.context.begin(), 
              e.context.end(),
              std::bind1st(xju::functional::method(&BaseException::addContext),
                           x));
  }
private:
  ORBImpl impl_;
};
  
}

#endif
