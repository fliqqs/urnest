// Copyright (c) 2017 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//

#include <omniORB4/CORBA.h>
#include <omniORB4/cdrStream.h>
#include <omniORB4/codeSets.h> //impl
#include <omniORB4/internal/giopStreamImpl.h> //impl
#include <cinttypes>

namespace cxy
{
// class so we get write access to cdrEncapsulationStream's pd_ncs_c,
// pd_ncs_w, pd_tcs_c and pd_tcs_w
//
class cdrEncapsulationStream_ : public cdrEncapsulationStream
{
public:
  cdrEncapsulationStream_() throw(){
    // to allow cxy::Any use before omniORB orbInit
    if (!pd_ncs_c){
      pd_ncs_c=omni::omniCodeSet::getNCS_C(omni::omniCodeSet::ID_8859_1);
    }
    if (!pd_tcs_c){
      GIOP::Version ver{1,2};

      pd_tcs_c = omni::omniCodeSet::getTCS_C(pd_ncs_c->id(), ver);
    }
    if (!pd_ncs_w){
      pd_ncs_w=omni::omniCodeSet::getNCS_W(omni::omniCodeSet::ID_8859_1);
    }
    if (pd_ncs_w && !pd_tcs_w){
      GIOP::Version ver{1,2};

      pd_tcs_w = omni::omniCodeSet::getTCS_W(pd_ncs_w->id(), ver);
    }
  }
  cdrEncapsulationStream_(uint32_t c,
                   omni::omniCodeSet::TCS_C* pd_tcs_c,
                   omni::omniCodeSet::TCS_W* pd_tcs_w) throw():
      cdrEncapsulationStream(c)
  {
    this->pd_tcs_c=pd_tcs_c;
    this->pd_tcs_w=pd_tcs_w;
    this->pd_ncs_c=omni::omniCodeSet::getNCS_C(omni::omniCodeSet::ID_8859_1);
    this->pd_ncs_w=omni::omniCodeSet::getNCS_W(omni::omniCodeSet::ID_8859_1);
  }
  cdrEncapsulationStream_(cdrEncapsulationStream_ const& b) throw():
      cdrEncapsulationStream(b)
  {
    // work around omniORB cdrMemoryStream copy constructor bug
    pd_ncs_c=b.pd_ncs_c;
    pd_ncs_w=b.pd_ncs_w;
  }
};

}
