// Copyright (c) 2015 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//

#include <omniORB4/CORBA.h> //impl
#include <omniORB4/cdrStream.h> //impl
#include "TypeKind.hh" //impl

#include <stdint.h>

#include "cdr.hh" //impl

class cdrStream;

namespace cxy
{

template<class T>
class typecode
{
  //must specialise to provide encode function, which
  //encoded the CORBA typecode for T to a cdrStream as
  //per CORBA CDR Transfer Syntax for TypeCode Pseudo-Object
};

template<>
class typecode<uint8_t>
{
public:
  static void encode(uint8_t const x, cdrStream& s) throw()
  {
    cxy::cdr<uint32_t>::marshal(TypeKind::OCTET, s);
  }
};

  
template<>
class typecode<int16_t>
{
public:
  static void encode(int16_t const x, cdrStream& s) throw()
  {
    cxy::cdr<uint32_t>::marshal(TypeKind::SHORT, s);
  }
};

  
}
