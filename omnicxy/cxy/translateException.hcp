// Copyright (c) 2014 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//
#include <sstream>
#include <typeinfo>
#include "Exceptions.hh"
#include "Exception.hh"
#include "copyContext.hh"
#include "WrongType.hh"
#include "NoSuchObject.hh"
#include "PortInUse.hh"

namespace cxy
{
template<class E>
typename cxy::Exceptions<E>::NoSuchObject translateException(
  cxy::NoSuchObject const& e)
{
  typename cxy::Exceptions<E>::NoSuchObject result(
    e.cause_.first, e.cause_.second);
  copyContext(e.context_.begin(), e.context_.end(), result);
  return result;
}

template<class E>
typename cxy::Exceptions<E>::PortInUse translateException(
  cxy::PortInUse const& e)
{
  typename cxy::Exceptions<E>::PortInUse result(
    e.cause_.first, e.cause_.second);
  copyContext(e.context_.begin(), e.context_.end(), result);
  return result;
}

template<class E>
typename cxy::Exceptions<E>::WrongType translateException(
  cxy::WrongType const& e)
{
  typename cxy::Exceptions<E>::WrongType result(
    e.cause_.first, e.cause_.second);
  copyContext(e.context_.begin(), e.context_.end(), result);
  return result;
}

template<class E>
E translateException(
  cxy::Exception const& e)
{
  E result(e.cause_.first, e.cause_.second);
  copyContext(e.context_.begin(), e.context_.end(), result);
  return result;
}

}
