# Source Types

*.o => :o;

*.a => :a;

*.sm  => :sm;


# Input Object Types

:o 'object module' => :FILE;

:sm 'system model of source code files'? => :FILE;


# Intermediate Object Types

:sm.list 'list of files in a system model' => :LIST;

:code.list 'list of code files' => :LIST;

:libraries.view_desc 'library view description' => :FILE;


# Output Object Types

:a 'object library archive'? => :FILE;

:library_flags 'library command line flags' => :FILE;

:libraries 'library references' => :LIST;


# Parameter Types

+lib 'a library name'? => :ls;

+lib_sp 'name of a directory in an library search path'? => :ls;


# Environment Variables

$ODIN_IGNORE 'egrep expression for includes to ignore' = '/usr/include';

$ODIN_LIB_SP 'default library search path' = '/lib /usr/lib';

$ODIN_RANLIB 'archive symbol table program' = '';

$ODIN_AR 'ar program' = 'ar';

$ODIN_AR_PATH 'path to set when invoking ar' = '/usr/bin:/bin';

# Tools

READ-LIST (:sm)
   => (:sm.list);

COLLECT (:sm.list :recurse=:sm.list)
   => (:code.list);

EXEC (ar.sh) (:code.list :map=:o :ls) NEEDS (:code.list :map=:o)
   => (:a);

EXEC (libraries.sh) (+lib) (+lib_sp) NEEDS (:libraries.view_desc :libraries)&
   => (:libraries.view_desc) (:library_flags);

COLLECT (:libraries.view_desc :view)
   => (:libraries);
