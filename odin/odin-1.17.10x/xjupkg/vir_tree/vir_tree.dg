# like vir_dir: but makes a tree of virtual directories from a single input
# file:
#
# %config.vir_tree==<<
#  x/y/z==Odinfile%root/config/x/y/z
#  x/p==Odinfile%root/x/p
#  a/q==Odinfile%root/config/a/q
#  b==Odinfile%root/config/b
#
# %config==(%config.vir_tree:vir_tree)
#
# produces:
#  %x==(%config.vir_tree+select='x':vir_tree)
#  %a==(%config.vir_tree+select='a':vir_tree)
#  %b==Odinfile%root/config/b
#
# ... where (%config.vir_tree+select='x':vir_tree) produces
#  %y==(%config.vir_tree+select='x/y':vir_tree)
#  %p==(Odinfile%root/p)
#
# Note that the Odinfile before the % is necessary where the target
# is a virtual target because otherwise otherwise odin looks in
# the vir_dir spec file for the target.

# Source Types

*.vir_tree_spec => :vir_tree_spec;

# Intermediate
:vir_tree_spec 'virtual directory tree spec'? => :FILE;

:vir_dir_spec 'spec for part of :vir_tree' => :FILE;

:cast.vir_tree_spec 'explicit cast of file to vir_tree_spec'? => <:vir_tree_spec>;

# Output Types

:vir_tree '(virtual) directory tree - root :vir_dir'? => :REFERENCE;

# Parameter Types

+select 'select subtree items from :vir_tree_spec'? => :first;

# Derivations

EXEC (vir_tree.py) (:vir_tree_spec) (+select) => (:vir_dir_spec);

COLLECT (:vir_dir_spec:vir_dir) => (:vir_tree);

EXEC (/bin/cp) (:FILE) 'cast.vir_tree_spec' => (:cast.vir_tree_spec);
