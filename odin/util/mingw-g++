#!/bin/bash
#
# Wrapper for MinGW's g++ so that we can call it from cygwin
# (the wrapper translates file names)
#
# REVISIT argument quoting is probably not quite right.
#
declare -a translated_args

while [ $# -gt 0 ]
do
  case $1 in
      -I)
	  tanslated_args[${#translated_args[@]}]="-I"
	  ;;
      -I*)
	  u=`/bin/expr "$1" : '[-]I\(.*\)'`
	  w=`/usr/bin/cygpath --windows "$u"`
	  translated_args[${#translated_args[@]}]="-I$w"
	  ;;
      -L)
          translated_args[${#translated_args[@]}]="-L"
          ;;
      -L*)
	  u=`/bin/expr "$1" : '[-]L\(.*\)'`
	  w=`/usr/bin/cygpath --windows "$u"`
	  translated_args[${#translated_args[@]}]="-L$w"
	  ;;
      -*)
	  translated_args[${#translated_args[@]}]="$1"
	  ;;
      *)
	  w=`/usr/bin/cygpath --windows "$1"`
	  translated_args[${#translated_args[@]}]="$w"
	  ;;
  esac
  shift
done

set -f
echo "g++" "${translated_args[@]}"
out=`g++ "${translated_args[@]}" 2>&1`
result=$?
if [ $result = 0 ]
then
  echo "$out" |  
  /bin/sed 's=[cC]:/cygwin==g'  | 
  /bin/sed 's=\([^.A-Za-z0-9]\)\([a-zA-Z]\):=\1/cygdrive/\2=g'
else
  echo "$out" |
  /bin/sed 's=[cC]:/cygwin==g' |
  /bin/sed 's=\([^.A-Za-z0-9]\)\([a-zA-Z]\):=\1/cygdrive/\2=g' >&2
fi
exit $result
