#!/usr/bin/env python3

# put all code into  a function to minimise polution of global namespace
# i.e. of main module, so we are as close as possible to a vanilla run
# of the program
def __xju_run_cov_main__():
    import sys
    from pathlib import Path
    import pickle
    from trace import Trace
    import os

    if len(sys.argv)==1:
        print(f'usage: {sys.argv[0]} out.cov argv0 [argv1 ...]',file=sys.stderr)
        print(f'  create/replace out.cov with coverage from run of argv')
        sys.exit(1)
        pass

    out=Path(sys.argv[1])
    argv=sys.argv[2:]

    t = Trace(True, False)

    sys.argv = argv
    #note we assume python has been run with -P and therefor we won't have
    #our directory first on path
    with open(argv[0], 'rb') as fp:
        code = compile(fp.read(), argv[0], 'exec')
        pass
    # try to emulate __main__ namespace as much as possible
    globals().update({
        '__file__': argv[0],
    })

    try:
        t.runctx(code, globals(), globals())
    finally:
        with out.open('wb') as f:
            pickle.dump( (t.counts, t._calledfuncs, t._callers), f, 1)
            pass
        pass

__xju_run_cov_main__()
