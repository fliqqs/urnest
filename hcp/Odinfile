%all==%all.tree:leaves

%all.tree==<<
%standalone-tests.tree
hcp-split
hcp-parse-file
hcp-what-is-at
hcp-tags
hcp-scope-at
hcp-map-to-source
test-hcp-tags%all.tree
%scope-at-tests.tree
tags%all.tree

%run-standalone-tests == %standalone-tests.tree:leaves

%bootstrap-cxx-opts==<<
+inc_sp=(%hcp-split-bootstrap.tree)
+ld_flags=-lpthread

%cxx-opts == <<
+(..%cxx-opts)

%opts == <<
+(%cxx-opts)

%hcp-gen==%hcp-gen.vir_dir_specs:list:cat:vir_dir

%hcp-gen.vir_dir_specs==<<
%hcp-local-spec
%hcp-subdir-spec

%hcp-local-spec==.:dir.hcp.list+hpath='hcp':hcp-split-virdir-specs:cat

%hcp-subdir-spec==<<
%tags==./tags%hcp-gen

%test-parser == test-parser.cc+(%bootstrap-cxx-opts):auto.cxx.exe

%test-parser-cmd==<<
+cmd=(%test-parser) \
  (test-parser-class-1.h) \
  (test-parser-class-2.h) \
  (test-parser-namespace-1.h) \
  (test-parser-namespace-2.h) \
  (test-parser-namespace-3.h) \
  (test-parser-file-1.h)

%test-parser-run==(.)+(%test-parser-cmd):run

%standalone-tests.tree == <<
%local-standalone-tests.tree

%local-standalone-tests==%local-standalone-test.tree:leaves

%local-standalone-tests.tree == <<
()+(%test-parser-cmd):exec.output
test%all-tests.tree
tags%all-tests.tree

hcp-split == hcp-split.cc+(%bootstrap-cxx-opts):auto.cxx.exe
hcp-parse-file == hcp-parse-file.cc+(%opts):auto.cxx.exe
hcp-what-is-at == hcp-what-is-at.cc+(%opts):auto.cxx.exe
hcp-tags == hcp-tags.cc+(%opts):auto.cxx.exe
hcp-scope-at == hcp-scope-at.cc+(%opts):auto.cxx.exe
hcp-map-to-source == hcp-map-to-source.cc+(%opts):auto.cxx.exe


%scope-at-tests.tree==<<
%check-scope-at
%test-scope-at-0
%test-scope-at-30
%test-scope-at-57
%test-scope-at-75
%test-scope-at-21
%test-scope-at-47
%test-scope-at-68
%test-scope-at-110
%test-scope-at-181
%test-scope-at-287
%test-scope-at-337
%test-scope-at-353
%test-scope-at-367
%test-scope-at-380
%test-scope-at-394
%test-scope-at-26
%test-scope-at-52
%test-scope-at-401
%test-scope-at-458

%check-scope-at==()+cmd=(hcp-parse-file) (%test-scope-at.hcp):exec.output

%test-scope-at-0==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '0' 'header ::':exec.output
%test-scope-at-30==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '30' 'header ::':exec.output
%test-scope-at-57==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '57' 'header ::':exec.output
%test-scope-at-75==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '75' 'header ::':exec.output
%test-scope-at-21==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '21' 'header ::a':exec.output
%test-scope-at-26==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '26' 'impl ::a':exec.output
%test-scope-at-47==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '47' 'header ::b':exec.output
%test-scope-at-52==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '52' 'impl ::b':exec.output
%test-scope-at-68==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '68' 'header ::f':exec.output
%test-scope-at-110==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '110' 'header ::n1::c1':exec.output
%test-scope-at-181==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '181' 'header ::n2::n21::c1':exec.output
%test-scope-at-287==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '287' 'header ::g::h::p::q::r':exec.output
%test-scope-at-337==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '337' 'header ::g':exec.output
%test-scope-at-353==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '353' 'header ::g':exec.output
%test-scope-at-367==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '367' 'header ::g':exec.output
%test-scope-at-380==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '380' 'header ::g':exec.output
%test-scope-at-394==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '394' 'header ::g':exec.output
%test-scope-at-401==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '401' 'impl ::g':exec.output
%test-scope-at-458==(%test-scope-at.hcp)+cmd=(%test-scope-at.sh) (hcp-scope-at) '458' 'header ::g2':exec.output

%test-scope-at.sh== ! <<
#!/bin/sh
cat > input &&
"$1" input "$2" > got &&
echo "$3 $4" > want &&
diff want got

%test-scope-at.hcp==<<
namespace a {
  void c() {}
}
class b {
  void d() {}
};
enum f {
  a
};
namespace n1 {
  class c1 {
    void f1() {}
  };
}
namespace n2 {
  namespace n21 {
  class c1 {
    void f1() {}
  };
  }
}
namespace g {
  namespace h {
    class p {
      class q {
        enum r {
          c
        };
      };
    };
  }
  namespace_ x();
  typedef_ y();
  using_ z();
  enum_ q();
  class_ r();
  B p=Z(32);
}
namespace g2{
  std::string decode(xju::Optional<X> const& x){
  }
}


%hcp-split-bootstrap.tree==%hcp-split-bootstrap.vir_tree_spec:vir_tree

%hcp-split-bootstrap.vir_tree_spec==<<
xju/assert.hh==../xju/assert.hh
xju/Exception.hh==../xju/Exception.hh
xju/path.hh==../xju/path.hh
xju/format.hh==../xju/format.hh
xju/stringToUInt.hh==../xju/stringToUInt.hh
xju/Shared.hh==../xju/Shared.hh
xju/parse.hh==../xju/parse.hh
xju/RingLink.hh==../xju/RingLink.hh
xju/Traced.hh==../xju/Traced.hh
xju/Mutex.hh==../xju/Mutex.hh
xju/JoiningIterator.hh==../xju/JoiningIterator.hh
xju/ios_base.hh==../xju/ios_base.hh
xju/next.hh==../xju/next.hh
xju/Optional.hh==../xju/Optional.hh
xju/Tagged.hh==../xju/Tagged.hh
xju/Lock.hh==../xju/Lock.hh
xju/isnan.hh==../xju/isnan.hh
xju/unix_epoch.hh==../xju/unix_epoch.hh
xju/prev.hh==../xju/prev.hh
xju/AutoFd.hh==../xju/AutoFd.hh
xju/syscall.hh==../xju/syscall.hh
xju/fcntl.hh==../xju/fcntl.hh
xju/unistd.hh==../xju/unistd.hh
xju/NonCopyable.hh==../xju/NonCopyable.hh
xju/assert.cc==../xju/assert.cc
xju/Exception.cc==../xju/Exception.cc
xju/path.cc==../xju/path.cc
xju/format.cc==../xju/format.cc
xju/stringToUInt.cc==../xju/stringToUInt.cc
xju/Mutex.cc==../xju/Mutex.cc
xju/isnan.cc==../xju/isnan.cc
xju/unix_epoch.cc==../xju/unix_epoch.cc
xju/AutoFd.cc==../xju/AutoFd.cc
xju/syscall.cc==../xju/syscall.cc
xju/fcntl.cc==../xju/fcntl.cc
xju/unistd.cc==../xju/unistd.cc
hcp/ast.hh==./ast.hh
hcp/parser.hh==./parser.hh
hcp/getOptionValue.hh==./getOptionValue.hh
hcp/readFile.hh==./readFile.hh
hcp/trace.hh==./trace.hh
hcp/ast.cc==./ast.cc
hcp/parser.cc==./parser.cc
hcp/getOptionValue.cc==./getOptionValue.cc
hcp/readFile.cc==./readFile.cc
hcp/trace.cc==./trace.cc
hcp/translateException.hh==./translateException.hh
hcp/translateException.cc==./translateException.cc

