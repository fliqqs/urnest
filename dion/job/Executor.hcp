// Copyright (c) 2020 Trevor Taylor
//
// Permission to use, copy, modify, distribute and sell this software
// and its documentation for any purpose is hereby granted without fee,
// provided that the above copyright notice appear in all.
// Trevor Taylor makes no representations about the suitability of this
// software for any purpose.  It is provided "as is" without express or
// implied warranty.
//


#include <dion/Date.hh>
#include <set>
#include <xju/io/Input.hh>
#include <dion/job/Starter.hh>
#include <dion/job/Collector.hh>

namespace dion
{
namespace job
{
  
class Executor :
    public virtual Starter,
    public virtual Collector
{
public:
  virtual ~Executor() noexcept{}

  // Starter::
  // Collector::
  virtual Ids executorNotBusyJob() const noexcept = 0;

  // Read outputs from specified jobs, returns any that are now done.
  // - result will include executorNotBusyJob() if executor has room
  //   for more jobs
  virtual job::Ids readOutputs(job::Ids const& jobs)
    = 0;

  virtual std::set<xju::io::Input const*> jobOutputs(job::Ids const& jobs)
    = 0;
};

}
}
