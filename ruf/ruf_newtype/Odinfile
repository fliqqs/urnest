%all == %all.tree:leaves

%all.tree == <<
%test-newtype.output
%test-newtype-compile-error:err+cmd=grep -F ':6:33':stdout

%test-newtype == test-newtype.rs+(..%rs-opts):exe

%test-newtype.output == ()+cmd=RUST_BACKTRACE\=full (%test-newtype):exec.output

%test-newtype-compile-error == %test-newtype-compile-error.rs+(..%rs-opts):exe

%test-newtype-compile-error.rs==<<
extern crate ruf_newtype;
struct I1_; impl ruf_newtype::Tag for I1_ { type BaseType = i32; }
struct I2_; impl ruf_newtype::Tag for I2_ { type BaseType = i64; }
type I1 = ruf_newtype::T<I1_>;
type I2 = ruf_newtype::T<I2_>;
fn main(){ let a = I1::new(2) + I2::new(3); }
